{
  "name": "vaporview",
  "publisher": "lramseyer",
  "displayName": "VaporView",
  "description": "Digital Waveform Viewer for VS code",
  "icon": "media/icon.png",
  "galleryBanner": {
    "color": "#202020",
    "theme": "dark"
  },
  "version": "1.2.4",
  "repository": "https://github.com/lramseyer/vaporview",
  "categories": [
    "Debuggers",
    "Visualization",
    "Other"
  ],
  "keywords": [
    "Waveform",
    "Wave",
    "Viewer",
    "VCD",
    "FST",
    "Logic Simulation",
    "Logic Analyzer"
  ],
  "engines": {
    "vscode": "^1.89.0"
  },
  "main": "./out/core/extension",
  "browser": "./out/core/extension",
  "activationEvents": [],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vaporViewActivityBar",
          "title": "Vaporview",
          "icon": "media/activityBar.svg"
        }
      ]
    },
    "views": {
      "vaporViewActivityBar": [
        {
          "id": "netlistContainer",
          "name": "Netlist"
        },
        {
          "id": "displaylistContainer",
          "name": "Displayed Signals"
        }
      ]
    },
    "customEditors": [
      {
        "viewType": "vaporview.waveformViewer",
        "displayName": "VaporView",
        "selector": [
          {
            "filenamePattern": "*.vcd"
          },
          {
            "filenamePattern": "*.fst"
          }
        ]
      }
    ],
    "configuration": {
      "title": "VaporView",
      "properties": {
        "vaporview.fstMaxStaticLoadSize": {
          "type": "number",
          "default": 256,
          "minimum": 0,
          "maximum": 65536,
          "scope": "application",
          "description": "Maximum file size to load FST files into memory. This is faster, but consumes more memory. Set to 0 to disable."
        }
      }
    },
    "submenus": [
      {
        "id": "vaporview.waveDrom",
        "label": "WaveDrom"
      },
      {
        "id": "vaporview.valueFormat",
        "label": "Format Values",
        "when": "webviewSection == 'signal' && width != '1'"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "vaporview.addSelected",
          "when": "viewItem == 'netlistVar' && view == 'netlistContainer'",
          "group": "0_default"
        },
        {
          "command": "vaporview.removeSelectedNetlist",
          "when": "viewItem == 'netlistVar' && view == 'netlistContainer'",
          "group": "0_default"
        },
        {
          "command": "vaporview.removeSelectedDisplayedSignals",
          "when": "viewItem == 'netlistVar' && view == 'displaylistContainer'",
          "group": "0_default"
        },
        {
          "command": "vaporview.addAllInModule",
          "when": "viewItem == 'netlistScope'",
          "group": "0_default"
        },
        {
          "command": "vaporview.removeAllInModule",
          "when": "viewItem == 'netlistScope'",
          "group": "0_default"
        },
        {
          "command": "vaporview.saveViewerSettings",
          "when": "view == 'netlistContainer' || view == 'displaylistContainer'",
          "group": "1_saveLoad"
        },
        {
          "command": "vaporview.loadViewerSettings",
          "when": "view == 'netlistContainer' || view == 'displaylistContainer'",
          "group": "1_saveLoad"
        },
        {
          "command": "vaporview.reloadFile",
          "when": "view == 'netlistContainer' || view == 'displaylistContainer'",
          "group": "2_reload"
        }
      ],
      "webview/context": [
        {
          "command": "vaporview.removeSignal",
          "when": "webviewSection == 'signal'",
          "group": "0_default"
        },
        {
          "command": "vaporview.showInNetlistView",
          "when": "webviewSection == 'signal' && 1 == 2",
          "group": "0_default"
        },
        {
          "submenu": "vaporview.valueFormat",
          "when": "webviewSection == 'signal'",
          "group": "0_default"
        },
        {
          "command": "vaporview.saveViewerSettings",
          "group": "1_saveLoad"
        },
        {
          "command": "vaporview.loadViewerSettings",
          "group": "1_saveLoad"
        },
        {
          "submenu": "vaporview.waveDrom",
          "when": "webviewSection == 'signal'",
          "group": "2_waveDrom"
        }
      ],
      "vaporview.valueFormat": [
        {
          "command": "vaporview.displayAsBinary",
          "when": "webviewSection == 'signal' && width != '1'"
        },
        {
          "command": "vaporview.displayAsDecimal",
          "when": "webviewSection == 'signal' && width != '1'"
        },
        {
          "command": "vaporview.displayAsHexadecimal",
          "when": "webviewSection == 'signal' && width != '1'"
        }
      ],
      "vaporview.waveDrom": [
        {
          "command": "vaporview.copyWaveDrom",
          "when": "webviewSection == 'signal'"
        },
        {
          "command": "vaporview.unsetWaveDromClock",
          "when": "webviewSection == 'signal'"
        },
        {
          "command": "vaporview.setWaveDromClockRising",
          "when": "webviewSection == 'signal' && width == '1'"
        },
        {
          "command": "vaporview.setWaveDromClockFalling",
          "when": "webviewSection == 'signal' && width == '1'"
        }
      ]
    },
    "commands": [
      {
        "command": "vaporview.addSelected",
        "title": "Add Selected"
      },
      {
        "command": "vaporview.addAllInModule",
        "title": "Add All Signals In Module"
      },
      {
        "command": "vaporview.removeSelectedNetlist",
        "title": "Remove Selected"
      },
      {
        "command": "vaporview.removeSelectedDisplayedSignals",
        "title": "Remove Selected"
      },
      {
        "command": "vaporview.removeAllInModule",
        "title": "Remove All Signals In Module"
      },
      {
        "command": "vaporview.removeSignal",
        "title": "Remove Signal"
      },
      {
        "command": "vaporview.showInNetlistView",
        "title": "Show in Netlist View"
      },
      {
        "command": "vaporview.displayAsBinary",
        "title": "Binary"
      },
      {
        "command": "vaporview.displayAsDecimal",
        "title": "Decimal"
      },
      {
        "command": "vaporview.displayAsHexadecimal",
        "title": "Hexadecimal"
      },
      {
        "command": "vaporview.copyWaveDrom",
        "title": "Copy Selection as WaveDrom"
      },
      {
        "command": "vaporview.setWaveDromClockRising",
        "title": "Set WaveDrom Clock Rising"
      },
      {
        "command": "vaporview.setWaveDromClockFalling",
        "title": "Set WaveDrom Clock Falling"
      },
      {
        "command": "vaporview.unsetWaveDromClock",
        "title": "Unset WaveDrom Clock"
      },
      {
        "command": "vaporview.viewVaporViewSidebar",
        "title": "View VaporView Sidebar"
      },
      {
        "command": "vaporview.saveViewerSettings",
        "title": "Save Vaporview Settings"
      },
      {
        "command": "vaporview.loadViewerSettings",
        "title": "Load Vaporview Settings"
      },
      {
        "command": "vaporview.reloadFile",
        "title": "Reload File"
      }
    ]
  },
  "dependencies": {
    "@vscode/codicons": "0.0.35",
    "@vscode/wasm-component-model": "1.0.1"
  },
  "devDependencies": {
    "@types/node": "^18.14.6",
    "@types/vscode": "1.89.0",
    "@typescript-eslint/eslint-plugin": "^7.6.0",
    "@typescript-eslint/parser": "^7.6.0",
    "concurrently": "^9.1.0",
    "esbuild": "^0.20.2",
    "eslint": "^8.57.0",
    "serve": "^14.2.1",
    "ts-loader": "^9.5.1",
    "typescript": "^5.7.2",
    "webpack": "^5.96.1",
    "webpack-cli": "^5.1.4"
  },
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "npm run compile && npm run build:webview && cargo build --target wasm32-unknown-unknown",
    "compile": "npm run generate:model && tsc -b",
    "build:webview": "webpack --config webpack.config.webview.js",
    "watch": "concurrently \"npm run watch:extension\" \"npm run watch:webview\"",
    "watch:extension": "tsc -b -w",
    "watch:webview": "webpack --config webpack.config.webview.js --watch",
    "lint": "eslint ./src/extension_core --ext .ts,.tsx && eslint ./src/webview --ext .ts",
    "generate:model": "wit2ts --outDir ./src/extension_core ./wit",
    "serve": "serve --cors -l 5000 --ssl-cert $HOME/certs/localhost.pem --ssl-key $HOME/certs/localhost-key.pem"
  }
}
